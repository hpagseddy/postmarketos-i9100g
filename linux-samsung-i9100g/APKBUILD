# Kernel config based on: arch/arm/configs/(CHANGEME!)

pkgname="linux-samsung-i9100g"
pkgver=3.0.31
pkgrel=0
pkgdesc="Samsung Galaxy S2G kernel fork"
arch="armhf"
_carch="arm"
_flavor="samsung-i9100g"
url="https://kernel.org"
license="GPL2"
options="!strip !check !tracedeps"
makedepends="perl sed installkernel bash gmp-dev bc linux-headers elfutils-dev busybox-static-armhf findutils xz"
HOSTCC="${CC:-gcc}"
HOSTCC="${HOSTCC#${CROSS_COMPILE}}"

# Source
_repository="android_kernel_samsung_t1"
_commit="638ed4dc2c7d93040587d88359cfd2a5b88edc07"
_config="config-${_flavor}.${arch}"
source="
	$pkgname-$_commit.tar.gz::https://github.com/LineageOS/${_repository}/archive/${_commit}.tar.gz
	$_config
	compiler-gcc6.h
	init
	timeconst_fix.patch
	03_fix_paranoid_network_disabled.patch
"
builddir="$srcdir/${_repository}-${_commit}"

prepare() {
	default_prepare
	
	# Use Alpine's busybox.static instead of the pre-compiled busybox shipped
	# with the source
	cp -v /usr/$(arch_to_hostspec $arch)/bin/busybox.static \
		"$builddir"/usr/i9100g_initramfs_files/busybox

	# do not use ramdisk.cpio and ramdisk-recovery-device.cpio, always use
	# the initramfs from the recovery partition ("isorec"), so we can build
	# it later and independently from the kernel. also directly boot that
	# partition, not only when the recovery key combination was used.
	cd "$builddir"/usr/
	mv i9100g_initramfs.list i9100g_initramfs.list_old
	grep -v "../../ramdisk" i9100g_initramfs.list_old > i9100g_initramfs.list
	cp -v "$srcdir"/init "$builddir"/usr/i9100g_initramfs_files/init
	cd $builddir
	
	# gcc6 support
	cp -v "$srcdir/compiler-gcc6.h" "$builddir/include/linux/"

	# Remove -Werror from all makefiles
	find . -type f -name Makefile -print0 | \
		xargs -0 sed -i 's/-Werror-/-W/g'
	find . -type f -name Makefile -print0 | \
		xargs -0 sed -i 's/-Werror//g'

	# Prepare kernel config ('yes ""' for kernels lacking olddefconfig)
	cp "$srcdir"/$_config "$builddir"/.config
	yes "" | make ARCH="$_carch" HOSTCC="$HOSTCC" oldconfig
	
	# Initramfs won't build without that symlink
	ln -s . source
}

menuconfig() {
	cd "$builddir"
	make ARCH="$_carch" menuconfig
	cp .config "$startdir"/$_config
}

build() {
	unset LDFLAGS
	make ARCH="$_carch" CC="${CC:-gcc}" \
		KBUILD_BUILD_VERSION="$((pkgrel + 1 ))-postmarketOS"
}

package() {
	# kernel.release
	install -D "$builddir/include/config/kernel.release" \
		"$pkgdir/usr/share/kernel/$_flavor/kernel.release"

	# zImage (find the right one)
	cd "$builddir/arch/$_carch/boot"
	_target="$pkgdir/boot/vmlinuz-$_flavor"
	for _zimg in zImage-dtb Image.gz-dtb *zImage Image; do
		[ -e "$_zimg" ] || continue
		msg "zImage found: $_zimg"
		install -Dm644 "$_zimg" "$_target"
		break
	done
	if ! [ -e "$_target" ]; then
		error "Could not find zImage in $PWD!"
		return 1
	fi
}

sha512sums="9febfa97b20d2f46b57f6febbf63bedaa21c5529c8e7c1eda667d462ad98297c06f09231661074abf3a8886b656a4fd0349049a3061d2879360fcadf6e663374  linux-samsung-i9100g-638ed4dc2c7d93040587d88359cfd2a5b88edc07.tar.gz
5db7d185998251475031b8ad5f6f936b7872e9864bdc41efca8ccc08daf30e1a0de0c67d3a69e23217771200b4b73b2c917b67ca16d25fe4d10b1d8e15d9e734  config-samsung-i9100g.armhf
d80980e9474c82ba0ef1a6903b434d8bd1b092c40367ba543e72d2c119301c8b2d05265740e4104ca1ac5d15f6c4aa49e8776cb44264a9a28dc551e0d1850dcc  compiler-gcc6.h
ac1aeca9805f53f724bcf22c253571f4c1d181cd7cd3e35fef040204bb7fcfe54970878e5a42716e00825ec43a975c79003b948438da0c02e327ca2cda74449f  init
7191d532df8f6a8bf64b5b5bcaa7343c8d1b844c891a67fc6d29f421903ddd46c3e779a6f5a5833a6a8f635d1582f5224fa795b3912b8b211a90ee561ad31469  timeconst_fix.patch
df62e03666313bb03d9a455eac875f170a55d378b6e56b847c1c6ff1ce5cfafcfdf1d7605754ca3c684840ea00357f9ec4c6621f6ff77377132a484b9258f6f7  03_fix_paranoid_network_disabled.patch"

